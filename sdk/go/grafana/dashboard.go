// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Dashboard struct {
	pulumi.CustomResourceState

	ConfigJson pulumi.StringOutput `pulumi:"configJson"`
	Folder     pulumi.IntPtrOutput `pulumi:"folder"`
	Slug       pulumi.StringOutput `pulumi:"slug"`
}

// NewDashboard registers a new resource with the given unique name, arguments, and options.
func NewDashboard(ctx *pulumi.Context,
	name string, args *DashboardArgs, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	if args == nil || args.ConfigJson == nil {
		return nil, errors.New("missing required argument 'ConfigJson'")
	}
	if args == nil {
		args = &DashboardArgs{}
	}
	var resource Dashboard
	err := ctx.RegisterResource("grafana:/dashboard:Dashboard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDashboard gets an existing Dashboard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DashboardState, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	var resource Dashboard
	err := ctx.ReadResource("grafana:/dashboard:Dashboard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dashboard resources.
type dashboardState struct {
	ConfigJson *string `pulumi:"configJson"`
	Folder     *int    `pulumi:"folder"`
	Slug       *string `pulumi:"slug"`
}

type DashboardState struct {
	ConfigJson pulumi.StringPtrInput
	Folder     pulumi.IntPtrInput
	Slug       pulumi.StringPtrInput
}

func (DashboardState) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardState)(nil)).Elem()
}

type dashboardArgs struct {
	ConfigJson string `pulumi:"configJson"`
	Folder     *int   `pulumi:"folder"`
}

// The set of arguments for constructing a Dashboard resource.
type DashboardArgs struct {
	ConfigJson pulumi.StringInput
	Folder     pulumi.IntPtrInput
}

func (DashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardArgs)(nil)).Elem()
}
