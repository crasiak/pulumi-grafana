// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DataSourceJsonData struct {
	AssumeRoleArn           *string `pulumi:"assumeRoleArn"`
	AuthType                string  `pulumi:"authType"`
	CustomMetricsNamespaces *string `pulumi:"customMetricsNamespaces"`
	DefaultRegion           string  `pulumi:"defaultRegion"`
}

// DataSourceJsonDataInput is an input type that accepts DataSourceJsonDataArgs and DataSourceJsonDataOutput values.
// You can construct a concrete instance of `DataSourceJsonDataInput` via:
//
// 		 DataSourceJsonDataArgs{...}
//
type DataSourceJsonDataInput interface {
	pulumi.Input

	ToDataSourceJsonDataOutput() DataSourceJsonDataOutput
	ToDataSourceJsonDataOutputWithContext(context.Context) DataSourceJsonDataOutput
}

type DataSourceJsonDataArgs struct {
	AssumeRoleArn           pulumi.StringPtrInput `pulumi:"assumeRoleArn"`
	AuthType                pulumi.StringInput    `pulumi:"authType"`
	CustomMetricsNamespaces pulumi.StringPtrInput `pulumi:"customMetricsNamespaces"`
	DefaultRegion           pulumi.StringInput    `pulumi:"defaultRegion"`
}

func (DataSourceJsonDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceJsonData)(nil)).Elem()
}

func (i DataSourceJsonDataArgs) ToDataSourceJsonDataOutput() DataSourceJsonDataOutput {
	return i.ToDataSourceJsonDataOutputWithContext(context.Background())
}

func (i DataSourceJsonDataArgs) ToDataSourceJsonDataOutputWithContext(ctx context.Context) DataSourceJsonDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceJsonDataOutput)
}

// DataSourceJsonDataArrayInput is an input type that accepts DataSourceJsonDataArray and DataSourceJsonDataArrayOutput values.
// You can construct a concrete instance of `DataSourceJsonDataArrayInput` via:
//
// 		 DataSourceJsonDataArray{ DataSourceJsonDataArgs{...} }
//
type DataSourceJsonDataArrayInput interface {
	pulumi.Input

	ToDataSourceJsonDataArrayOutput() DataSourceJsonDataArrayOutput
	ToDataSourceJsonDataArrayOutputWithContext(context.Context) DataSourceJsonDataArrayOutput
}

type DataSourceJsonDataArray []DataSourceJsonDataInput

func (DataSourceJsonDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceJsonData)(nil)).Elem()
}

func (i DataSourceJsonDataArray) ToDataSourceJsonDataArrayOutput() DataSourceJsonDataArrayOutput {
	return i.ToDataSourceJsonDataArrayOutputWithContext(context.Background())
}

func (i DataSourceJsonDataArray) ToDataSourceJsonDataArrayOutputWithContext(ctx context.Context) DataSourceJsonDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceJsonDataArrayOutput)
}

type DataSourceJsonDataOutput struct{ *pulumi.OutputState }

func (DataSourceJsonDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceJsonData)(nil)).Elem()
}

func (o DataSourceJsonDataOutput) ToDataSourceJsonDataOutput() DataSourceJsonDataOutput {
	return o
}

func (o DataSourceJsonDataOutput) ToDataSourceJsonDataOutputWithContext(ctx context.Context) DataSourceJsonDataOutput {
	return o
}

func (o DataSourceJsonDataOutput) AssumeRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceJsonData) *string { return v.AssumeRoleArn }).(pulumi.StringPtrOutput)
}

func (o DataSourceJsonDataOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceJsonData) string { return v.AuthType }).(pulumi.StringOutput)
}

func (o DataSourceJsonDataOutput) CustomMetricsNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceJsonData) *string { return v.CustomMetricsNamespaces }).(pulumi.StringPtrOutput)
}

func (o DataSourceJsonDataOutput) DefaultRegion() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceJsonData) string { return v.DefaultRegion }).(pulumi.StringOutput)
}

type DataSourceJsonDataArrayOutput struct{ *pulumi.OutputState }

func (DataSourceJsonDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceJsonData)(nil)).Elem()
}

func (o DataSourceJsonDataArrayOutput) ToDataSourceJsonDataArrayOutput() DataSourceJsonDataArrayOutput {
	return o
}

func (o DataSourceJsonDataArrayOutput) ToDataSourceJsonDataArrayOutputWithContext(ctx context.Context) DataSourceJsonDataArrayOutput {
	return o
}

func (o DataSourceJsonDataArrayOutput) Index(i pulumi.IntInput) DataSourceJsonDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceJsonData {
		return vs[0].([]DataSourceJsonData)[vs[1].(int)]
	}).(DataSourceJsonDataOutput)
}

type DataSourceSecureJsonData struct {
	AccessKey string `pulumi:"accessKey"`
	SecretKey string `pulumi:"secretKey"`
}

// DataSourceSecureJsonDataInput is an input type that accepts DataSourceSecureJsonDataArgs and DataSourceSecureJsonDataOutput values.
// You can construct a concrete instance of `DataSourceSecureJsonDataInput` via:
//
// 		 DataSourceSecureJsonDataArgs{...}
//
type DataSourceSecureJsonDataInput interface {
	pulumi.Input

	ToDataSourceSecureJsonDataOutput() DataSourceSecureJsonDataOutput
	ToDataSourceSecureJsonDataOutputWithContext(context.Context) DataSourceSecureJsonDataOutput
}

type DataSourceSecureJsonDataArgs struct {
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (DataSourceSecureJsonDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSecureJsonData)(nil)).Elem()
}

func (i DataSourceSecureJsonDataArgs) ToDataSourceSecureJsonDataOutput() DataSourceSecureJsonDataOutput {
	return i.ToDataSourceSecureJsonDataOutputWithContext(context.Background())
}

func (i DataSourceSecureJsonDataArgs) ToDataSourceSecureJsonDataOutputWithContext(ctx context.Context) DataSourceSecureJsonDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSecureJsonDataOutput)
}

// DataSourceSecureJsonDataArrayInput is an input type that accepts DataSourceSecureJsonDataArray and DataSourceSecureJsonDataArrayOutput values.
// You can construct a concrete instance of `DataSourceSecureJsonDataArrayInput` via:
//
// 		 DataSourceSecureJsonDataArray{ DataSourceSecureJsonDataArgs{...} }
//
type DataSourceSecureJsonDataArrayInput interface {
	pulumi.Input

	ToDataSourceSecureJsonDataArrayOutput() DataSourceSecureJsonDataArrayOutput
	ToDataSourceSecureJsonDataArrayOutputWithContext(context.Context) DataSourceSecureJsonDataArrayOutput
}

type DataSourceSecureJsonDataArray []DataSourceSecureJsonDataInput

func (DataSourceSecureJsonDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceSecureJsonData)(nil)).Elem()
}

func (i DataSourceSecureJsonDataArray) ToDataSourceSecureJsonDataArrayOutput() DataSourceSecureJsonDataArrayOutput {
	return i.ToDataSourceSecureJsonDataArrayOutputWithContext(context.Background())
}

func (i DataSourceSecureJsonDataArray) ToDataSourceSecureJsonDataArrayOutputWithContext(ctx context.Context) DataSourceSecureJsonDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSecureJsonDataArrayOutput)
}

type DataSourceSecureJsonDataOutput struct{ *pulumi.OutputState }

func (DataSourceSecureJsonDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSecureJsonData)(nil)).Elem()
}

func (o DataSourceSecureJsonDataOutput) ToDataSourceSecureJsonDataOutput() DataSourceSecureJsonDataOutput {
	return o
}

func (o DataSourceSecureJsonDataOutput) ToDataSourceSecureJsonDataOutputWithContext(ctx context.Context) DataSourceSecureJsonDataOutput {
	return o
}

func (o DataSourceSecureJsonDataOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSecureJsonData) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o DataSourceSecureJsonDataOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSecureJsonData) string { return v.SecretKey }).(pulumi.StringOutput)
}

type DataSourceSecureJsonDataArrayOutput struct{ *pulumi.OutputState }

func (DataSourceSecureJsonDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceSecureJsonData)(nil)).Elem()
}

func (o DataSourceSecureJsonDataArrayOutput) ToDataSourceSecureJsonDataArrayOutput() DataSourceSecureJsonDataArrayOutput {
	return o
}

func (o DataSourceSecureJsonDataArrayOutput) ToDataSourceSecureJsonDataArrayOutputWithContext(ctx context.Context) DataSourceSecureJsonDataArrayOutput {
	return o
}

func (o DataSourceSecureJsonDataArrayOutput) Index(i pulumi.IntInput) DataSourceSecureJsonDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceSecureJsonData {
		return vs[0].([]DataSourceSecureJsonData)[vs[1].(int)]
	}).(DataSourceSecureJsonDataOutput)
}

func init() {
	pulumi.RegisterOutputType(DataSourceJsonDataOutput{})
	pulumi.RegisterOutputType(DataSourceJsonDataArrayOutput{})
	pulumi.RegisterOutputType(DataSourceSecureJsonDataOutput{})
	pulumi.RegisterOutputType(DataSourceSecureJsonDataArrayOutput{})
}
